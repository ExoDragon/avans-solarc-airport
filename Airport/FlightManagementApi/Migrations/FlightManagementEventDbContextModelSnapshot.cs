// <auto-generated />
using System;
using FlightManagementApi.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlightManagementApi.Migrations
{
    [DbContext(typeof(FlightManagementEventDbContext))]
    partial class FlightManagementEventDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlightManagementApi.Domain.Aggregates.FlightAggregate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CurrentVersion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("FlightManagementApi.Domain.Core.Event", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EventData")
                        .HasColumnType("text");

                    b.Property<string>("FlightAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MessageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlightAggregateId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("FlightManagementApi.Domain.Core.Event", b =>
                {
                    b.HasOne("FlightManagementApi.Domain.Aggregates.FlightAggregate", null)
                        .WithMany("Events")
                        .HasForeignKey("FlightAggregateId");
                });

            modelBuilder.Entity("FlightManagementApi.Domain.Aggregates.FlightAggregate", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
